"""
Django settings for DMDX_Django project.

Generated by 'django-admin startproject' using Django 4.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
import os
import django_heroku
import sentry_sdk
from sentry_sdk.integrations.django import DjangoIntegration

import dj_database_url
import cloudinary
import firebase_admin
from firebase_admin import credentials

# Heroku: Update database configuration from $DATABASE_URL.



# Build paths inside the project like this: BASE_DIR / 'subdir'.
import django_htmx.middleware

BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'cg#p$g+j9tax!#a3cup@1$8obt2_+&k3q+pmu)5%asj6yjpkag'

# SECURITY WARNING: don't run with debug turned on in production!
# Set DEBUG based on environment
DEBUG = True

# For production, ensure DEBUG is False
if 'DYNO' in os.environ:
    DEBUG = False
    
ALLOWED_HOSTS = ['*']

# Static files configuration
STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATICFILES_DIRS = [
    BASE_DIR / 'static',
]


# Sentry Configuration
if not DEBUG:
    sentry_sdk.init(
        dsn="https://83fa616ca7eaaf3570093ccf42e02ac3@o4509114063847424.ingest.us.sentry.io/4509114064109568",
        integrations=[DjangoIntegration()],
        traces_sample_rate=1.0,
        send_default_pii=True,
        environment="production",
    )

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'supplies',
    'admin_interface',
    'colorfield',
    'django_filters',
    'bootstrapform',
    'bootstrap_modal_forms',
    'mathfilters',
    'wkhtmltopdf',
    'crispy_forms',
    'crispy_bootstrap5',
    'pg_copy',
    # 'cloudinary_storage',
    'cloudinary',
    # 'widget_tweaks'
    'django_htmx',
    'django_celery_results',
    'celery_progress',
    'django_user_agents',
    'channels',
    'mixpanel',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django_htmx.middleware.HtmxMiddleware',
    'django_user_agents.middleware.UserAgentMiddleware',
]

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels.layers.InMemoryChannelLayer",
    },
}

# CLOUDINARY_STORAGE = {
#     'CLOUD_NAME': 'hmflrailz',
#     'API_KEY': '557949198628418',
#     'API_SECRET': 'so7e0wlsMQUWafO-Yv1QeNcJGkg'
# }

cloudinary.config(
  cloud_name = "hmflrailz",
  api_key = "557949198628418",
  api_secret = "so7e0wlsMQUWafO-Yv1QeNcJGkg",
  secure = True
)

FIREBASE_CONFIG = {
  "apiKey": "AIzaSyBANia_FqF-VmM5z0KfxOZCwrH66Co3sG0",
  "authDomain": "dmdx-django.firebaseapp.com",
  "projectId": "dmdx-django",
  "storageBucket": "dmdx-django.appspot.com",
  "messagingSenderId": "106138213160",
  "appId": "1:106138213160:web:7a4575df49b4dc1226ce1d",
  "measurementId": "G-V0KT30X5X8"
}
cred = credentials.Certificate(BASE_DIR / 'dmdx-django-firebase-adminsdk-jo7r9-ceae2ff3e5.json')
firebase_admin.initialize_app(cred, FIREBASE_CONFIG)

# DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'
DATA_UPLOAD_MAX_MEMORY_SIZE = 10240 * 1024 * 1024  # 10 GB in bytes
WKHTMLTOPDF_CMD = '/usr/local/bin/wkhtmltopdf'
WKHTMLTOPDF_CMD_OPTIONS = {
    'quiet': True,
    'enable-local-file-access': True
}

CSRF_TRUSTED_ORIGINS = [
    'https://dmdxstorage.herokuapp.com',
    # You can add other trusted origins as needed
]

ROOT_URLCONF = 'DMDX_Django.urls'

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'DMDX_Django.wsgi.application'
ASGI_APPLICATION = 'DMDX_Django.asgi.application'

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'dmdx',
        'USER': 'postgres',
        'PASSWORD': '4646',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}

# Update database configuration from $DATABASE_URL if available (for Heroku)
db_from_env = dj_database_url.config(conn_max_age=500)
if db_from_env:
    DATABASES['default'] = db_from_env

django_heroku.settings(locals())
DATABASES['default']['CONN_MAX_AGE'] = 0

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    # {
    #     'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    # },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

# The URL to use when referring to static files (where they will be served from)
MEDIA_URL ='/media/'
MEDIA_ROOT = BASE_DIR/'media'

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"

CRISPY_TEMPLATE_PACK = "bootstrap5"
AUTH_USER_MODEL = "supplies.CustomUser"
PG_COPY_BACKUP_PATH = 'db_backup'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_USE_TLS = True
EMAIL_PORT = 587
EMAIL_HOST_USER = 'blezin2205@gmail.com'
EMAIL_HOST_PASSWORD = 'Rohlikos31'


LANGUAGE_CODE = 'en-us'  # or any other locale
TIME_ZONE = 'Europe/Kyiv'  # Correct timezone for Kyiv
USE_TZ = True
#
# CELERY_BROKER_URL = 'rediss://:pe0ff32c5420845f7f82ecadf2729cf8051ae3f185ad1dd6e26617e5ca57fe3dd@ec2-35-168-134-227.compute-1.amazonaws.com:16129'
#
# CELERY_ACCEPT_CONTENT = ['json']
# CELERY_TASK_SERIALIZER = 'json'
# CELERY_RESULT_BACKEND = 'django-db'

# REDIS_URL = os.environ.get('REDIS_URL', 'redis://127.0.0.1:6379')
# BROKER_CONNECTION_MAX_RETRIES = os.environ.get('BROKER_CONNECTION_MAX_RETRIES', None)
# BROKER_POOL_LIMIT = os.environ.get('BROKER_POOL_LIMIT', None)
#
# # CELERY CONFIG
# CELERY_BROKER_URL = os.environ.get('CELERY_BROKER_URL', REDIS_URL)
# CELERY_RESULT_BACKEND = os.environ.get('CELERY_RESULT_BACKEND', REDIS_URL)
# CELERY_REDIS_MAX_CONNECTIONS = os.environ.get('CELERY_REDIS_MAX_CONNECTIONS', 5)
# CELERYD_CONCURRENCY = os.environ.get('CELERYD_CONCURRENCY', 1)

# Configure Django App for Heroku.

# Telegram Bot Settings
TELEGRAM_BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN', '1803152934:AAFjutMUtAz3wFS8MdBbo9bQmRdUGZEpkwQ')

TEAMS_WEBHOOK_URL_ORDERS = os.getenv('TEAMS_WEBHOOK_URL_ORDERS', 'https://ddxi.webhook.office.com/webhookb2/e9d80572-d9a1-424e-adb4-e6e2840e8c34@d4f5ac22-fa4d-4156-b0e0-9c62234c6b45/IncomingWebhook/c6694506a800419ab9aa040b09d0a5b1/3894266e-3403-44b0-a8e4-5a568f2b70a4/V2wLk3hA0SAVw9eR3KWQcu2RWV81FhmDaQxR41xjODk401')
TEAMS_WEBHOOK_URL_PREORDERS = os.getenv('TEAMS_WEBHOOK_URL_PREORDERS', 'https://ddxi.webhook.office.com/webhookb2/e9d80572-d9a1-424e-adb4-e6e2840e8c34@d4f5ac22-fa4d-4156-b0e0-9c62234c6b45/IncomingWebhook/3a448e3eaf974db19d8940ba81e9bcad/3894266e-3403-44b0-a8e4-5a568f2b70a4/V2i1ZRFQHD1Y1mdpEF1bxGZsvUvtDtc-0LHhz7OSWEHhs1')
TEAMS_WEBHOOK_URL_REMINDERS = os.getenv('TEAMS_WEBHOOK_URL_REMINDERS', 'https://ddxi.webhook.office.com/webhookb2/e9d80572-d9a1-424e-adb4-e6e2840e8c34@d4f5ac22-fa4d-4156-b0e0-9c62234c6b45/IncomingWebhook/5185d5e775ba4812ade4a68c69834863/3894266e-3403-44b0-a8e4-5a568f2b70a4/V2L0kQ1Q5ZlW5ncZecswVvM7GbsaV4KJDmrBhHd6bLEHU1')
# Logging Configuration
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'supplies': {  # This matches your app name
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': False,
        },
    },
    'root': {  # Root logger configuration
        'handlers': ['console'],
        'level': 'INFO',
        'propagate': False,
    },
}

# Nova Poshta API Settings
NOVA_POSHTA_API_KEY = '99f738524ca3320ece4b43b10f4181b1'
NOVA_POSHTA_PRINT_MARKING_URL_TEMPLATE = 'https://my.novaposhta.ua/orders/printMarking85x85/orders[]/{ref}/type/pdf8/apiKey/{api_key}'
NOVA_POSHTA_PRINT_MARKING_MULTIPLE_URL_TEMPLATE = 'https://my.novaposhta.ua/orders/printMarking85x85/orders/{refs}/type/pdf8/apiKey/{api_key}'
NOVA_POSHTA_PRINT_SCAN_SHEET_URL_TEMPLATE = '//my.novaposhta.ua/scanSheet/printScanSheet/refs[]/{ref}/type/pdf/apiKey/{api_key}'
NOVA_POSHTA_API_URL = 'https://api.novaposhta.ua/v2.0/json/'
NOVA_POSHTA_SENDER_DMDX_REF = "3b0e7317-2a6b-11eb-8513-b88303659df5"
NOVA_POSHTA_SENDER_DMDX_REF_PRIVATE_COUNTERAGENT = "3b13350b-2a6b-11eb-8513-b88303659df5"

X_FRAME_OPTIONS='SAMEORIGIN'

# Remove duplicate STATICFILES_DIRS and STATIC_ROOT settings
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
DATE_INPUT_FORMATS = '%d-%m-%Y'

# Auto-close setting for NP documents
IS_ORDER_AUTO_CLOSE_AFTER_NP_DOC_RECEIVED = os.environ.get('IS_ORDER_AUTO_CLOSE_AFTER_NP_DOC_RECEIVED', 'True').lower() == 'true'

REST_FRAMEWORK = {
   'DEFAULT_AUTHENTICATION_CLASSES': (
   'rest_framework.authentication.TokenAuthentication',
   )
}

# Mixpanel Configuration
MIXPANEL_TOKEN = os.environ.get('MIXPANEL_TOKEN', 'YOUR_PROJECT_TOKEN')
